@startuml ClassDiagram

skinparam linetype ortho
skinparam dpi 300
skinparam defaultFontSize 11
skinparam defaultFontName "Noto Sans CJK TC"

class User {
    +String studentId
    -String password
    +User construct()
}

class Passenger {
    +String phone
    +Coordinate location
    +Passenger construct()
}
User <|--- Passenger

class Organizer {
    +String phone
    +Coordinate location
    +Organizer construct()
}
User <|--- Organizer

class RecordController {
    +List<BusRecord> listRecords(studentId)
}
RecordController o--> BusRecord

class BusRecord {
    +ID recordId
    +User user
    +BusInformation busInformation
    +Image recordCertificate
    +BusRecord construct(busId)
}
BusRecord "0..*" --> "1" User: Create
BusRecord "0..*" o-> "1" BusInformation: Board

class BusInformationController {
    +BusInformation? retrieveBusInformation(busId)
}
BusInformationController o--> BusInformation

class BusInformation {
    +ID busId
    +Campus departOn
    +Campus arriveOn
    +Decimal cost
    +Time departAt
    +Time estArriveAt
    +BusInformation construct()
}
BusInformation "0..*" o--> "1" Campus: Depart / Arrive on

class Campus {
    +String name
    +Image map
    +Coordinate billOn
    +Campus construct()
}

class TaxiProposalPassengers {
    +TaxiProposal taxiProposal
    -List<Passenger> passengers
    +TaxiProposalPassengers construct()
    +void add(Passenger)
    +void remove(Passenger)
    +int count()
}
TaxiProposalPassengers "0..*" -> "0..*" Passenger: Contains
TaxiProposalPassengers "1" *--> "1" TaxiProposal: Belongs to

class TaxiProposalController {
    +TaxiProposal createProposal(proposalRequest)
    +TaxiProposalStatus getStatus(tpId)
    +String getFailReason(tpId)
    +void finish(tpId)
}
TaxiProposalController o-> TaxiProposal

class TaxiProposal {
    +ID tpId
    +Organizer organizer
    +Campus departOn
    +Campus arriveOn
    +Decimal cost
    +Time departAt
    +Time pairBefore
    +Int expectedPassengers
    +Boolean finished

    +TaxiProposal construct()
    +TaxiProposalStatus getStatus()
    +TaxiProposalPassengers getPassengers()
    +String getFailReason()
    +void finish()
}
TaxiProposal "0..*" o--> "1" Campus: Depart / Arrive on
TaxiProposal "0..*" --> "1" Organizer: Created by
TaxiProposal -> TaxiProposalStatus

enum TaxiProposalStatus {
    Waiting 等待配對
    Matched 配對成功
    Finished 配對單完成
    Unmatched 配對失敗
}

@enduml
